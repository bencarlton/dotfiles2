{{- if and (eq .chezmoi.os "linux") (.dev_computer) (eq .chezmoi.arch "amd64" ) -}}
#!/usr/bin/env bash

{{ template "shared_script_utils.bash" }}

header "Verify git-credential-manager installation and check for update"

# Fetch the API response once and store it in a variable
API_RESPONSE=$(curl -s "https://api.github.com/repos/git-ecosystem/git-credential-manager/releases/latest")

# Extract the required information from the stored API response
LATEST_VERSION=$(echo "$API_RESPONSE" | grep -Po '"tag_name": "v\K[^"]*')
IS_PRE_RELEASE=$(echo "$API_RESPONSE" | grep -Po '"prerelease":\s*\K[^,]*')
IS_DRAFT=$(echo "$API_RESPONSE" | grep -Po '"draft":\s*\K[^,]*')

info "Latest version: $LATEST_VERSION"

if git credential-manager --version &>/dev/null; then
  CURRENT_VERSION=$(git credential-manager --version | grep -Po '\d+\.\d+\.\d+')
    info "local git-credential-manager version is: ${CURRENT_VERSION}"

    if [[ ${CURRENT_VERSION} == "${LATEST_VERSION}" ]]; then
        success "git-credential-manager is already up to date"
        _safeExit_ 0
    fi

    if [[ ${IS_PRE_RELEASE} == "true" ]] || [[ ${IS_DRAFT} == "true" ]]; then
        notice "Latest git-credential-manager version is a pre-release or draft"
        _safeExit_ 0
    fi
fi

_makeTempDir_ "$(basename "$0")"
pushd "${TMP_DIR}" &>/dev/null || exit
warning "{{ .chezmoi.arch }}"

DEB="gcm-linux_{{.chezmoi.arch }}.${LATEST_VERSION}.deb"

wget https://github.com/git-ecosystem/git-credential-manager/releases/download/v${LATEST_VERSION}/${DEB}
sudo dpkg -i "${DEB}"
rm "${DEB}"

popd &>/dev/null || exit
_safeExit_
{{ end }}
